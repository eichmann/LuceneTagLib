
//----------------------------------------------------
// The following code was generated by CUP v0.11a beta 20060608
// Tue Sep 24 12:02:51 CDT 2013
//----------------------------------------------------

package edu.uiowa.NLP_grammar.syntaxMatch;

import java.util.*;
import org.apache.lucene.search.Query;

/** CUP v0.11a beta 20060608 generated parser.
  * @version Tue Sep 24 12:02:51 CDT 2013
  */
public class ConceptParseCup extends java_cup.runtime.lr_parser {

  /** Default constructor. */
  public ConceptParseCup() {super();}

  /** Constructor which sets the default scanner. */
  public ConceptParseCup(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public ConceptParseCup(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\002\000\002\002\004\000\002\002\003" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\004\000\002\001\002\000\004\002\006\001\002\000" +
    "\004\002\000\001\002\000\004\002\001\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\004\000\006\002\003\003\004\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$ConceptParseCup$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$ConceptParseCup$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$ConceptParseCup$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}



        public static void main(String args[]) throws Exception {
                new parser(new searchMatchFlex(System.in)).parse();
        }

}

/** Cup generated class to encapsulate user supplied action code.*/
class CUP$ConceptParseCup$actions {
  private final ConceptParseCup parser;

  /** Constructor */
  CUP$ConceptParseCup$actions(ConceptParseCup parser) {
    this.parser = parser;
  }

  /** Method with the actual generated action code. */
  public final java_cup.runtime.Symbol CUP$ConceptParseCup$do_action(
    int                        CUP$ConceptParseCup$act_num,
    java_cup.runtime.lr_parser CUP$ConceptParseCup$parser,
    java.util.Stack            CUP$ConceptParseCup$stack,
    int                        CUP$ConceptParseCup$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$ConceptParseCup$result;

      /* select the action based on the action number */
      switch (CUP$ConceptParseCup$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // top ::= Pat 
            {
              Query RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$ConceptParseCup$stack.peek()).left;
		int pright = ((java_cup.runtime.Symbol)CUP$ConceptParseCup$stack.peek()).right;
		Query p = (Query)((java_cup.runtime.Symbol) CUP$ConceptParseCup$stack.peek()).value;
		 RESULT = p;
					   if (syntaxMatcher.debug) System.out.println("\ttop: " + RESULT);
					 
              CUP$ConceptParseCup$result = parser.getSymbolFactory().newSymbol("top",0, ((java_cup.runtime.Symbol)CUP$ConceptParseCup$stack.peek()), ((java_cup.runtime.Symbol)CUP$ConceptParseCup$stack.peek()), RESULT);
            }
          return CUP$ConceptParseCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= top EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$ConceptParseCup$stack.elementAt(CUP$ConceptParseCup$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$ConceptParseCup$stack.elementAt(CUP$ConceptParseCup$top-1)).right;
		Query start_val = (Query)((java_cup.runtime.Symbol) CUP$ConceptParseCup$stack.elementAt(CUP$ConceptParseCup$top-1)).value;
		RESULT = start_val;
              CUP$ConceptParseCup$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$ConceptParseCup$stack.elementAt(CUP$ConceptParseCup$top-1)), ((java_cup.runtime.Symbol)CUP$ConceptParseCup$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$ConceptParseCup$parser.done_parsing();
          return CUP$ConceptParseCup$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number found in internal parse table");

        }
    }
}

